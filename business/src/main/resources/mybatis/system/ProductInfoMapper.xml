<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.project.system.mapper.ProductInfoMapper">
    
    <resultMap type="ProductInfo" id="ProductInfoResult">
        <result property="productId"    column="product_id"    />
        <result property="productName"    column="product_name"    />
        <result property="productPrice"    column="product_price"    />
        <result property="description"    column="description"    />
        <result property="productFlavour"    column="product_flavour"    />
        <result property="businessId"    column="business_id"    />
        <result property="businessName"    column="business_name"    />
        <result property="type"    column="type"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
        <result property="productPicture"    column="product_picture"    />
    </resultMap>

    <sql id="selectProductInfoVo">
        select product_id, product_name, product_price, description, product_flavour, business_id, business_name, type, status, create_by, create_time, update_by, update_time, remark, product_picture from product_info
    </sql>

    <select id="selectProductInfoList" parameterType="ProductInfo" resultMap="ProductInfoResult">
        <include refid="selectProductInfoVo"/>
        <where>  
            <if test="productName != null  and productName != ''"> and product_name like concat('%', #{productName}, '%')</if>
            <if test="productFlavour != null "> and product_flavour = #{productFlavour}</if>
            <if test="businessId != null "> and business_id = #{businessId}</if>
            <if test="businessName != null  and businessName != ''"> and business_name like concat('%', #{businessName}, '%')</if>
        </where>
    </select>
    
    <select id="selectProductInfoByProductId" parameterType="Integer" resultMap="ProductInfoResult">
        <include refid="selectProductInfoVo"/>
        where product_id = #{productId}
    </select>
        
    <insert id="insertProductInfo" parameterType="ProductInfo" useGeneratedKeys="true" keyProperty="productId">
        insert into product_info
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="productName != null">product_name,</if>
            <if test="productPrice != null">product_price,</if>
            <if test="description != null">description,</if>
            <if test="productFlavour != null">product_flavour,</if>
            <if test="businessId != null">business_id,</if>
            <if test="businessName != null">business_name,</if>
            <if test="type != null">type,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
            <if test="productPicture != null">product_picture,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="productName != null">#{productName},</if>
            <if test="productPrice != null">#{productPrice},</if>
            <if test="description != null">#{description},</if>
            <if test="productFlavour != null">#{productFlavour},</if>
            <if test="businessId != null">#{businessId},</if>
            <if test="businessName != null">#{businessName},</if>
            <if test="type != null">#{type},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
            <if test="productPicture != null">#{productPicture},</if>
         </trim>
    </insert>

    <update id="updateProductInfo" parameterType="ProductInfo">
        update product_info
        <trim prefix="SET" suffixOverrides=",">
            <if test="productName != null">product_name = #{productName},</if>
            <if test="productPrice != null">product_price = #{productPrice},</if>
            <if test="description != null">description = #{description},</if>
            <if test="productFlavour != null">product_flavour = #{productFlavour},</if>
            <if test="businessId != null">business_id = #{businessId},</if>
            <if test="businessName != null">business_name = #{businessName},</if>
            <if test="type != null">type = #{type},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="productPicture != null">product_picture = #{productPicture},</if>
        </trim>
        where product_id = #{productId}
    </update>

    <delete id="deleteProductInfoByProductId" parameterType="Integer">
        delete from product_info where product_id = #{productId}
    </delete>

    <delete id="deleteProductInfoByProductIds" parameterType="String">
        delete from product_info where product_id in 
        <foreach item="productId" collection="array" open="(" separator="," close=")">
            #{productId}
        </foreach>
    </delete>
</mapper>